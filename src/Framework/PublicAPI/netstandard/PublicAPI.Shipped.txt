abstract Microsoft.Build.Framework.SdkLogger.LogMessage(string message, Microsoft.Build.Framework.MessageImportance messageImportance = Microsoft.Build.Framework.MessageImportance.Low) -> void
abstract Microsoft.Build.Framework.SdkResolver.Name.get -> string
abstract Microsoft.Build.Framework.SdkResolver.Priority.get -> int
abstract Microsoft.Build.Framework.SdkResolver.Resolve(Microsoft.Build.Framework.SdkReference sdkReference, Microsoft.Build.Framework.SdkResolverContext resolverContext, Microsoft.Build.Framework.SdkResultFactory factory) -> Microsoft.Build.Framework.SdkResult
abstract Microsoft.Build.Framework.SdkResultFactory.IndicateFailure(System.Collections.Generic.IEnumerable<string> errors, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
abstract Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
const Microsoft.Build.Framework.BuildEventContext.InvalidEvaluationId = -1 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidNodeId = -2 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidProjectContextId = -2 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidProjectInstanceId = -1 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidSubmissionId = -1 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidTargetId = -1 -> int
const Microsoft.Build.Framework.BuildEventContext.InvalidTaskId = -1 -> int
const Microsoft.Build.Framework.EngineServices.Version1 = 1 -> int
const Microsoft.Build.Framework.ProjectStartedEventArgs.InvalidProjectId = -1 -> int
Microsoft.Build.Framework.AnyEventHandler
Microsoft.Build.Framework.BuildEngineResult
Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult() -> void
Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult(bool result, System.Collections.Generic.List<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>> targetOutputsPerProject) -> void
Microsoft.Build.Framework.BuildEngineResult.Result.get -> bool
Microsoft.Build.Framework.BuildEngineResult.TargetOutputsPerProject.get -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>>
Microsoft.Build.Framework.BuildErrorEventArgs
Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs() -> void
Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildErrorEventArgs.Code.get -> string
Microsoft.Build.Framework.BuildErrorEventArgs.ColumnNumber.get -> int
Microsoft.Build.Framework.BuildErrorEventArgs.EndColumnNumber.get -> int
Microsoft.Build.Framework.BuildErrorEventArgs.EndLineNumber.get -> int
Microsoft.Build.Framework.BuildErrorEventArgs.File.get -> string
Microsoft.Build.Framework.BuildErrorEventArgs.HelpLink.get -> string
Microsoft.Build.Framework.BuildErrorEventArgs.LineNumber.get -> int
Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.set -> void
Microsoft.Build.Framework.BuildErrorEventArgs.Subcategory.get -> string
Microsoft.Build.Framework.BuildErrorEventHandler
Microsoft.Build.Framework.BuildEventArgs
Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs() -> void
Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.set -> void
Microsoft.Build.Framework.BuildEventArgs.HelpKeyword.get -> string
Microsoft.Build.Framework.BuildEventArgs.RawMessage.get -> string
Microsoft.Build.Framework.BuildEventArgs.RawMessage.set -> void
Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.get -> System.DateTime
Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.set -> void
Microsoft.Build.Framework.BuildEventArgs.SenderName.get -> string
Microsoft.Build.Framework.BuildEventArgs.ThreadId.get -> int
Microsoft.Build.Framework.BuildEventArgs.Timestamp.get -> System.DateTime
Microsoft.Build.Framework.BuildEventContext
Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int targetId, int projectContextId, int taskId) -> void
Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int evaluationId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
Microsoft.Build.Framework.BuildEventContext.BuildRequestId.get -> long
Microsoft.Build.Framework.BuildEventContext.EvaluationId.get -> int
Microsoft.Build.Framework.BuildEventContext.NodeId.get -> int
Microsoft.Build.Framework.BuildEventContext.ProjectContextId.get -> int
Microsoft.Build.Framework.BuildEventContext.ProjectInstanceId.get -> int
Microsoft.Build.Framework.BuildEventContext.SubmissionId.get -> int
Microsoft.Build.Framework.BuildEventContext.TargetId.get -> int
Microsoft.Build.Framework.BuildEventContext.TaskId.get -> int
Microsoft.Build.Framework.BuildFinishedEventArgs
Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs() -> void
Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded) -> void
Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildFinishedEventArgs.Succeeded.get -> bool
Microsoft.Build.Framework.BuildFinishedEventHandler
Microsoft.Build.Framework.BuildMessageEventArgs
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs() -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildMessageEventArgs.Code.get -> string
Microsoft.Build.Framework.BuildMessageEventArgs.ColumnNumber.get -> int
Microsoft.Build.Framework.BuildMessageEventArgs.EndColumnNumber.get -> int
Microsoft.Build.Framework.BuildMessageEventArgs.EndLineNumber.get -> int
Microsoft.Build.Framework.BuildMessageEventArgs.File.get -> string
Microsoft.Build.Framework.BuildMessageEventArgs.Importance.get -> Microsoft.Build.Framework.MessageImportance
Microsoft.Build.Framework.BuildMessageEventArgs.LineNumber.get -> int
Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.set -> void
Microsoft.Build.Framework.BuildMessageEventArgs.Subcategory.get -> string
Microsoft.Build.Framework.BuildMessageEventHandler
Microsoft.Build.Framework.BuildStartedEventArgs
Microsoft.Build.Framework.BuildStartedEventArgs.BuildEnvironment.get -> System.Collections.Generic.IDictionary<string, string>
Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs() -> void
Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword) -> void
Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.Collections.Generic.IDictionary<string, string> environmentOfBuild) -> void
Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildStartedEventHandler
Microsoft.Build.Framework.BuildStatusEventArgs
Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs() -> void
Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildStatusEventHandler
Microsoft.Build.Framework.BuildWarningEventArgs
Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs() -> void
Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.BuildWarningEventArgs.Code.get -> string
Microsoft.Build.Framework.BuildWarningEventArgs.ColumnNumber.get -> int
Microsoft.Build.Framework.BuildWarningEventArgs.EndColumnNumber.get -> int
Microsoft.Build.Framework.BuildWarningEventArgs.EndLineNumber.get -> int
Microsoft.Build.Framework.BuildWarningEventArgs.File.get -> string
Microsoft.Build.Framework.BuildWarningEventArgs.HelpLink.get -> string
Microsoft.Build.Framework.BuildWarningEventArgs.LineNumber.get -> int
Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.set -> void
Microsoft.Build.Framework.BuildWarningEventArgs.Subcategory.get -> string
Microsoft.Build.Framework.BuildWarningEventHandler
Microsoft.Build.Framework.CriticalBuildMessageEventArgs
Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs() -> void
Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.CustomBuildEventArgs
Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs() -> void
Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.CustomBuildEventHandler
Microsoft.Build.Framework.EngineServices
Microsoft.Build.Framework.EngineServices.EngineServices() -> void
Microsoft.Build.Framework.EnvironmentVariableReadEventArgs
Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.get -> string
Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.set -> void
Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs() -> void
Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs(string environmentVariableName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs() -> void
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded) -> void
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.Succeeded.get -> bool
Microsoft.Build.Framework.ExternalProjectStartedEventArgs
Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs() -> void
Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames) -> void
Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ExternalProjectStartedEventArgs.TargetNames.get -> string
Microsoft.Build.Framework.IBuildEngine
Microsoft.Build.Framework.IBuildEngine.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs) -> bool
Microsoft.Build.Framework.IBuildEngine.ColumnNumberOfTaskNode.get -> int
Microsoft.Build.Framework.IBuildEngine.ContinueOnError.get -> bool
Microsoft.Build.Framework.IBuildEngine.LineNumberOfTaskNode.get -> int
Microsoft.Build.Framework.IBuildEngine.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
Microsoft.Build.Framework.IBuildEngine.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
Microsoft.Build.Framework.IBuildEngine.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
Microsoft.Build.Framework.IBuildEngine.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
Microsoft.Build.Framework.IBuildEngine.ProjectFileOfTaskNode.get -> string
Microsoft.Build.Framework.IBuildEngine10
Microsoft.Build.Framework.IBuildEngine10.EngineServices.get -> Microsoft.Build.Framework.EngineServices
Microsoft.Build.Framework.IBuildEngine2
Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion) -> bool
Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) -> bool
Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes.get -> bool
Microsoft.Build.Framework.IBuildEngine3
Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList<string>[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) -> Microsoft.Build.Framework.BuildEngineResult
Microsoft.Build.Framework.IBuildEngine3.Reacquire() -> void
Microsoft.Build.Framework.IBuildEngine3.Yield() -> void
Microsoft.Build.Framework.IBuildEngine4
Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection) -> void
Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
Microsoft.Build.Framework.IBuildEngine5
Microsoft.Build.Framework.IBuildEngine5.LogTelemetry(string eventName, System.Collections.Generic.IDictionary<string, string> properties) -> void
Microsoft.Build.Framework.IBuildEngine6
Microsoft.Build.Framework.IBuildEngine6.GetGlobalProperties() -> System.Collections.Generic.IReadOnlyDictionary<string, string>
Microsoft.Build.Framework.IBuildEngine7
Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.get -> bool
Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.set -> void
Microsoft.Build.Framework.IBuildEngine8
Microsoft.Build.Framework.IBuildEngine8.ShouldTreatWarningAsError(string warningCode) -> bool
Microsoft.Build.Framework.IBuildEngine9
Microsoft.Build.Framework.IBuildEngine9.ReleaseCores(int coresToRelease) -> void
Microsoft.Build.Framework.IBuildEngine9.RequestCores(int requestedCores) -> int
Microsoft.Build.Framework.ICancelableTask
Microsoft.Build.Framework.ICancelableTask.Cancel() -> void
Microsoft.Build.Framework.IEventRedirector
Microsoft.Build.Framework.IEventRedirector.ForwardEvent(Microsoft.Build.Framework.BuildEventArgs buildEvent) -> void
Microsoft.Build.Framework.IEventSource
Microsoft.Build.Framework.IEventSource.AnyEventRaised -> Microsoft.Build.Framework.AnyEventHandler
Microsoft.Build.Framework.IEventSource.BuildFinished -> Microsoft.Build.Framework.BuildFinishedEventHandler
Microsoft.Build.Framework.IEventSource.BuildStarted -> Microsoft.Build.Framework.BuildStartedEventHandler
Microsoft.Build.Framework.IEventSource.CustomEventRaised -> Microsoft.Build.Framework.CustomBuildEventHandler
Microsoft.Build.Framework.IEventSource.ErrorRaised -> Microsoft.Build.Framework.BuildErrorEventHandler
Microsoft.Build.Framework.IEventSource.MessageRaised -> Microsoft.Build.Framework.BuildMessageEventHandler
Microsoft.Build.Framework.IEventSource.ProjectFinished -> Microsoft.Build.Framework.ProjectFinishedEventHandler
Microsoft.Build.Framework.IEventSource.ProjectStarted -> Microsoft.Build.Framework.ProjectStartedEventHandler
Microsoft.Build.Framework.IEventSource.StatusEventRaised -> Microsoft.Build.Framework.BuildStatusEventHandler
Microsoft.Build.Framework.IEventSource.TargetFinished -> Microsoft.Build.Framework.TargetFinishedEventHandler
Microsoft.Build.Framework.IEventSource.TargetStarted -> Microsoft.Build.Framework.TargetStartedEventHandler
Microsoft.Build.Framework.IEventSource.TaskFinished -> Microsoft.Build.Framework.TaskFinishedEventHandler
Microsoft.Build.Framework.IEventSource.TaskStarted -> Microsoft.Build.Framework.TaskStartedEventHandler
Microsoft.Build.Framework.IEventSource.WarningRaised -> Microsoft.Build.Framework.BuildWarningEventHandler
Microsoft.Build.Framework.IEventSource2
Microsoft.Build.Framework.IEventSource2.TelemetryLogged -> Microsoft.Build.Framework.TelemetryEventHandler
Microsoft.Build.Framework.IEventSource3
Microsoft.Build.Framework.IEventSource3.IncludeEvaluationMetaprojects() -> void
Microsoft.Build.Framework.IEventSource3.IncludeEvaluationProfiles() -> void
Microsoft.Build.Framework.IEventSource3.IncludeTaskInputs() -> void
Microsoft.Build.Framework.IEventSource4
Microsoft.Build.Framework.IEventSource4.IncludeEvaluationPropertiesAndItems() -> void
Microsoft.Build.Framework.IForwardingLogger
Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.set -> void
Microsoft.Build.Framework.IForwardingLogger.NodeId.get -> int
Microsoft.Build.Framework.IForwardingLogger.NodeId.set -> void
Microsoft.Build.Framework.IGeneratedTask
Microsoft.Build.Framework.IGeneratedTask.GetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property) -> object
Microsoft.Build.Framework.IGeneratedTask.SetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property, object value) -> void
Microsoft.Build.Framework.ILogger
Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
Microsoft.Build.Framework.ILogger.Parameters.get -> string
Microsoft.Build.Framework.ILogger.Parameters.set -> void
Microsoft.Build.Framework.ILogger.Shutdown() -> void
Microsoft.Build.Framework.ILogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.ILogger.Verbosity.set -> void
Microsoft.Build.Framework.INodeLogger
Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
Microsoft.Build.Framework.IProjectElement
Microsoft.Build.Framework.IProjectElement.ElementName.get -> string
Microsoft.Build.Framework.IProjectElement.OuterElement.get -> string
Microsoft.Build.Framework.ITask
Microsoft.Build.Framework.ITask.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
Microsoft.Build.Framework.ITask.BuildEngine.set -> void
Microsoft.Build.Framework.ITask.Execute() -> bool
Microsoft.Build.Framework.ITask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
Microsoft.Build.Framework.ITask.HostObject.set -> void
Microsoft.Build.Framework.ITaskFactory
Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
Microsoft.Build.Framework.ITaskFactory.FactoryName.get -> string
Microsoft.Build.Framework.ITaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
Microsoft.Build.Framework.ITaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
Microsoft.Build.Framework.ITaskFactory.TaskType.get -> System.Type
Microsoft.Build.Framework.ITaskFactory2
Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary<string, string> taskIdentityParameters) -> Microsoft.Build.Framework.ITask
Microsoft.Build.Framework.ITaskFactory2.Initialize(string taskName, System.Collections.Generic.IDictionary<string, string> factoryIdentityParameters, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
Microsoft.Build.Framework.ITaskHost
Microsoft.Build.Framework.ITaskItem
Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem destinationItem) -> void
Microsoft.Build.Framework.ITaskItem.GetMetadata(string metadataName) -> string
Microsoft.Build.Framework.ITaskItem.ItemSpec.get -> string
Microsoft.Build.Framework.ITaskItem.ItemSpec.set -> void
Microsoft.Build.Framework.ITaskItem.MetadataCount.get -> int
Microsoft.Build.Framework.ITaskItem.MetadataNames.get -> System.Collections.ICollection
Microsoft.Build.Framework.ITaskItem.RemoveMetadata(string metadataName) -> void
Microsoft.Build.Framework.ITaskItem.SetMetadata(string metadataName, string metadataValue) -> void
Microsoft.Build.Framework.ITaskItem2
Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped() -> System.Collections.IDictionary
Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.get -> string
Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.set -> void
Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(string metadataName) -> string
Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(string metadataName, string metadataValue) -> void
Microsoft.Build.Framework.LazyFormattedBuildEventArgs
Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs() -> void
Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName) -> void
Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute
Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute.LoadInSeparateAppDomainAttribute() -> void
Microsoft.Build.Framework.LoggerException
Microsoft.Build.Framework.LoggerException.ErrorCode.get -> string
Microsoft.Build.Framework.LoggerException.HelpKeyword.get -> string
Microsoft.Build.Framework.LoggerException.LoggerException() -> void
Microsoft.Build.Framework.LoggerException.LoggerException(string message) -> void
Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException) -> void
Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException, string errorCode, string helpKeyword) -> void
Microsoft.Build.Framework.LoggerException.LoggerException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.LoggerVerbosity.Detailed = 3 -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.LoggerVerbosity.Diagnostic = 4 -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.LoggerVerbosity.Minimal = 1 -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.LoggerVerbosity.Normal = 2 -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.LoggerVerbosity.Quiet = 0 -> Microsoft.Build.Framework.LoggerVerbosity
Microsoft.Build.Framework.MessageImportance
Microsoft.Build.Framework.MessageImportance.High = 0 -> Microsoft.Build.Framework.MessageImportance
Microsoft.Build.Framework.MessageImportance.Low = 2 -> Microsoft.Build.Framework.MessageImportance
Microsoft.Build.Framework.MessageImportance.Normal = 1 -> Microsoft.Build.Framework.MessageImportance
Microsoft.Build.Framework.MetaprojectGeneratedEventArgs
Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.MetaprojectGeneratedEventArgs(string metaprojectXml, string metaprojectPath, string message) -> void
Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.metaprojectXml -> string
Microsoft.Build.Framework.OutputAttribute
Microsoft.Build.Framework.OutputAttribute.OutputAttribute() -> void
Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementDescription.get -> string
Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementName.get -> string
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation() -> void
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long id, long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPass.get -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPassDescription.get -> string
Microsoft.Build.Framework.Profiler.EvaluationLocation.File.get -> string
Microsoft.Build.Framework.Profiler.EvaluationLocation.Id.get -> long
Microsoft.Build.Framework.Profiler.EvaluationLocation.IsEvaluationPass.get -> bool
Microsoft.Build.Framework.Profiler.EvaluationLocation.Kind.get -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
Microsoft.Build.Framework.Profiler.EvaluationLocation.Line.get -> int?
Microsoft.Build.Framework.Profiler.EvaluationLocation.ParentId.get -> long?
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithEvaluationPass(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string passDescription = null) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFile(string file) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndCondition(string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndElement(string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithGlob(string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocation.WithParentId(long? parentId) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
Microsoft.Build.Framework.Profiler.EvaluationLocationKind
Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Condition = 1 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Element = 0 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Glob = 2 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.InitialProperties = 2 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.ItemDefinitionGroups = 4 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.Items = 5 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.LazyItems = 6 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.Properties = 3 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.Targets = 8 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.TotalEvaluation = 0 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.TotalGlobbing = 1 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.EvaluationPass.UsingTasks = 7 -> Microsoft.Build.Framework.Profiler.EvaluationPass
Microsoft.Build.Framework.Profiler.ProfiledLocation
Microsoft.Build.Framework.Profiler.ProfiledLocation.ExclusiveTime.get -> System.TimeSpan
Microsoft.Build.Framework.Profiler.ProfiledLocation.InclusiveTime.get -> System.TimeSpan
Microsoft.Build.Framework.Profiler.ProfiledLocation.NumberOfHits.get -> int
Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation() -> void
Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation(System.TimeSpan inclusiveTime, System.TimeSpan exclusiveTime, int numberOfHits) -> void
Microsoft.Build.Framework.Profiler.ProfilerResult
Microsoft.Build.Framework.Profiler.ProfilerResult.ProfiledLocations.get -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation>
Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult() -> void
Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult(System.Collections.Generic.IDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation> profiledLocations) -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.set -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.set -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.get -> Microsoft.Build.Framework.Profiler.ProfilerResult?
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.set -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs() -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs(string message, params object[] messageArgs) -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.set -> void
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.set -> void
Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs
Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs() -> void
Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs(string message, params object[] messageArgs) -> void
Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.set -> void
Microsoft.Build.Framework.ProjectFinishedEventArgs
Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs() -> void
Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded) -> void
Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.ProjectFinishedEventArgs.Succeeded.get -> bool
Microsoft.Build.Framework.ProjectFinishedEventHandler
Microsoft.Build.Framework.ProjectImportedEventArgs
Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.get -> string
Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.set -> void
Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.get -> bool
Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.set -> void
Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs() -> void
Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs(int lineNumber, int columnNumber, string message, params object[] messageArgs) -> void
Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.get -> string
Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.set -> void
Microsoft.Build.Framework.ProjectStartedEventArgs
Microsoft.Build.Framework.ProjectStartedEventArgs.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
Microsoft.Build.Framework.ProjectStartedEventArgs.Items.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.ProjectStartedEventArgs.ParentProjectBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectId.get -> int
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs() -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext) -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items) -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.ProjectStartedEventArgs.Properties.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.ProjectStartedEventArgs.TargetNames.get -> string
Microsoft.Build.Framework.ProjectStartedEventArgs.ToolsVersion.get -> string
Microsoft.Build.Framework.ProjectStartedEventHandler
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs() -> void
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs(string propertyName, string propertyValue, string propertySource, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.get -> string
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.set -> void
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.get -> string
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.set -> void
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.get -> string
Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.set -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs
Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.get -> string
Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.set -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.get -> string
Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.set -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.get -> string
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.set -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.get -> string
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.set -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs() -> void
Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs(string propertyName, string previousValue, string newValue, string location, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
Microsoft.Build.Framework.RegisteredTaskObjectLifetime
Microsoft.Build.Framework.RegisteredTaskObjectLifetime.AppDomain = 1 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
Microsoft.Build.Framework.RegisteredTaskObjectLifetime.Build = 0 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
Microsoft.Build.Framework.RequiredAttribute
Microsoft.Build.Framework.RequiredAttribute.RequiredAttribute() -> void
Microsoft.Build.Framework.RequiredRuntimeAttribute
Microsoft.Build.Framework.RequiredRuntimeAttribute.RequiredRuntimeAttribute(string runtimeVersion) -> void
Microsoft.Build.Framework.RequiredRuntimeAttribute.RuntimeVersion.get -> string
Microsoft.Build.Framework.RunInMTAAttribute
Microsoft.Build.Framework.RunInMTAAttribute.RunInMTAAttribute() -> void
Microsoft.Build.Framework.RunInSTAAttribute
Microsoft.Build.Framework.RunInSTAAttribute.RunInSTAAttribute() -> void
Microsoft.Build.Framework.SdkLogger
Microsoft.Build.Framework.SdkLogger.SdkLogger() -> void
Microsoft.Build.Framework.SdkReference
Microsoft.Build.Framework.SdkReference.Equals(Microsoft.Build.Framework.SdkReference other) -> bool
Microsoft.Build.Framework.SdkReference.MinimumVersion.get -> string
Microsoft.Build.Framework.SdkReference.Name.get -> string
Microsoft.Build.Framework.SdkReference.SdkReference(string name, string version, string minimumVersion) -> void
Microsoft.Build.Framework.SdkReference.Version.get -> string
Microsoft.Build.Framework.SdkResolver
Microsoft.Build.Framework.SdkResolver.SdkResolver() -> void
Microsoft.Build.Framework.SdkResolverContext
Microsoft.Build.Framework.SdkResolverContext.SdkResolverContext() -> void
Microsoft.Build.Framework.SdkResult
Microsoft.Build.Framework.SdkResult.SdkResult() -> void
Microsoft.Build.Framework.SdkResultFactory
Microsoft.Build.Framework.SdkResultFactory.SdkResultFactory() -> void
Microsoft.Build.Framework.SdkResultItem
Microsoft.Build.Framework.SdkResultItem.ItemSpec.get -> string
Microsoft.Build.Framework.SdkResultItem.ItemSpec.set -> void
Microsoft.Build.Framework.SdkResultItem.Metadata.get -> System.Collections.Generic.Dictionary<string, string>
Microsoft.Build.Framework.SdkResultItem.SdkResultItem() -> void
Microsoft.Build.Framework.SdkResultItem.SdkResultItem(string itemSpec, System.Collections.Generic.Dictionary<string, string> metadata) -> void
Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetBuiltReason.AfterTargets = 3 -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetBuiltReason.BeforeTargets = 1 -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetBuiltReason.DependsOn = 2 -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetBuiltReason.None = 0 -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetFinishedEventArgs
Microsoft.Build.Framework.TargetFinishedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.TargetFinishedEventArgs.Succeeded.get -> bool
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFile.get -> string
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs() -> void
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded) -> void
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.Collections.IEnumerable targetOutputs) -> void
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.DateTime eventTimestamp, System.Collections.IEnumerable targetOutputs) -> void
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetName.get -> string
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.get -> System.Collections.IEnumerable
Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.set -> void
Microsoft.Build.Framework.TargetFinishedEventHandler
Microsoft.Build.Framework.TargetSkippedEventArgs
Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.get -> string
Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.get -> string
Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.get -> bool
Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.get -> string
Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.get -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.get -> string
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.get -> string
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.set -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs() -> void
Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs(string message, params object[] messageArgs) -> void
Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkipReason.ConditionWasFalse = 4 -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkipReason.None = 0 -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkipReason.OutputsUpToDate = 3 -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltSuccessfully = 1 -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltUnsuccessfully = 2 -> Microsoft.Build.Framework.TargetSkipReason
Microsoft.Build.Framework.TargetStartedEventArgs
Microsoft.Build.Framework.TargetStartedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
Microsoft.Build.Framework.TargetStartedEventArgs.ParentTarget.get -> string
Microsoft.Build.Framework.TargetStartedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.TargetStartedEventArgs.TargetFile.get -> string
Microsoft.Build.Framework.TargetStartedEventArgs.TargetName.get -> string
Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs() -> void
Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile) -> void
Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, Microsoft.Build.Framework.TargetBuiltReason buildReason, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TargetStartedEventHandler
Microsoft.Build.Framework.TaskCommandLineEventArgs
Microsoft.Build.Framework.TaskCommandLineEventArgs.CommandLine.get -> string
Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs() -> void
Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance) -> void
Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskName.get -> string
Microsoft.Build.Framework.TaskFinishedEventArgs
Microsoft.Build.Framework.TaskFinishedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.TaskFinishedEventArgs.Succeeded.get -> bool
Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFile.get -> string
Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs() -> void
Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded) -> void
Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TaskFinishedEventArgs.TaskName.get -> string
Microsoft.Build.Framework.TaskFinishedEventHandler
Microsoft.Build.Framework.TaskParameterEventArgs
Microsoft.Build.Framework.TaskParameterEventArgs.Items.get -> System.Collections.IList
Microsoft.Build.Framework.TaskParameterEventArgs.ItemType.get -> string
Microsoft.Build.Framework.TaskParameterEventArgs.Kind.get -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterEventArgs.LogItemMetadata.get -> bool
Microsoft.Build.Framework.TaskParameterEventArgs.TaskParameterEventArgs(Microsoft.Build.Framework.TaskParameterMessageKind kind, string itemType, System.Collections.IList items, bool logItemMetadata, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.AddItem = 2 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.RemoveItem = 3 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetInputs = 4 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetOutputs = 5 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.TaskInput = 0 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskParameterMessageKind.TaskOutput = 1 -> Microsoft.Build.Framework.TaskParameterMessageKind
Microsoft.Build.Framework.TaskPropertyInfo
Microsoft.Build.Framework.TaskPropertyInfo.Log.get -> bool
Microsoft.Build.Framework.TaskPropertyInfo.Log.set -> void
Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.get -> bool
Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.set -> void
Microsoft.Build.Framework.TaskPropertyInfo.Name.get -> string
Microsoft.Build.Framework.TaskPropertyInfo.Output.get -> bool
Microsoft.Build.Framework.TaskPropertyInfo.PropertyType.get -> System.Type
Microsoft.Build.Framework.TaskPropertyInfo.Required.get -> bool
Microsoft.Build.Framework.TaskPropertyInfo.TaskPropertyInfo(string name, System.Type typeOfParameter, bool output, bool required) -> void
Microsoft.Build.Framework.TaskStartedEventArgs
Microsoft.Build.Framework.TaskStartedEventArgs.ColumnNumber.get -> int
Microsoft.Build.Framework.TaskStartedEventArgs.LineNumber.get -> int
Microsoft.Build.Framework.TaskStartedEventArgs.ProjectFile.get -> string
Microsoft.Build.Framework.TaskStartedEventArgs.TaskFile.get -> string
Microsoft.Build.Framework.TaskStartedEventArgs.TaskName.get -> string
Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs() -> void
Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName) -> void
Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, System.DateTime eventTimestamp) -> void
Microsoft.Build.Framework.TaskStartedEventHandler
Microsoft.Build.Framework.TelemetryEventArgs
Microsoft.Build.Framework.TelemetryEventArgs.EventName.get -> string
Microsoft.Build.Framework.TelemetryEventArgs.EventName.set -> void
Microsoft.Build.Framework.TelemetryEventArgs.Properties.get -> System.Collections.Generic.IDictionary<string, string>
Microsoft.Build.Framework.TelemetryEventArgs.Properties.set -> void
Microsoft.Build.Framework.TelemetryEventArgs.TelemetryEventArgs() -> void
Microsoft.Build.Framework.TelemetryEventHandler
Microsoft.Build.Framework.UninitializedPropertyReadEventArgs
Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.get -> string
Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.set -> void
Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs() -> void
Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs(string propertyName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
override Microsoft.Build.Framework.BuildEventContext.Equals(object obj) -> bool
override Microsoft.Build.Framework.BuildEventContext.GetHashCode() -> int
override Microsoft.Build.Framework.BuildEventContext.ToString() -> string
override Microsoft.Build.Framework.LazyFormattedBuildEventArgs.Message.get -> string
override Microsoft.Build.Framework.LoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
override Microsoft.Build.Framework.Profiler.EvaluationLocation.Equals(object obj) -> bool
override Microsoft.Build.Framework.Profiler.EvaluationLocation.GetHashCode() -> int
override Microsoft.Build.Framework.Profiler.EvaluationLocation.ToString() -> string
override Microsoft.Build.Framework.Profiler.ProfiledLocation.Equals(object obj) -> bool
override Microsoft.Build.Framework.Profiler.ProfiledLocation.GetHashCode() -> int
override Microsoft.Build.Framework.Profiler.ProfiledLocation.ToString() -> string
override Microsoft.Build.Framework.Profiler.ProfilerResult.Equals(object obj) -> bool
override Microsoft.Build.Framework.Profiler.ProfilerResult.GetHashCode() -> int
override Microsoft.Build.Framework.ProjectFinishedEventArgs.Message.get -> string
override Microsoft.Build.Framework.ProjectStartedEventArgs.Message.get -> string
override Microsoft.Build.Framework.PropertyReassignmentEventArgs.Message.get -> string
override Microsoft.Build.Framework.SdkReference.Equals(object obj) -> bool
override Microsoft.Build.Framework.SdkReference.GetHashCode() -> int
override Microsoft.Build.Framework.SdkReference.ToString() -> string
override Microsoft.Build.Framework.SdkResultItem.Equals(object obj) -> bool
override Microsoft.Build.Framework.SdkResultItem.GetHashCode() -> int
override Microsoft.Build.Framework.TargetFinishedEventArgs.Message.get -> string
override Microsoft.Build.Framework.TargetSkippedEventArgs.Message.get -> string
override Microsoft.Build.Framework.TargetStartedEventArgs.Message.get -> string
override Microsoft.Build.Framework.TaskFinishedEventArgs.Message.get -> string
override Microsoft.Build.Framework.TaskParameterEventArgs.Message.get -> string
override Microsoft.Build.Framework.TaskStartedEventArgs.Message.get -> string
static Microsoft.Build.Framework.BuildEventContext.Invalid.get -> Microsoft.Build.Framework.BuildEventContext
static Microsoft.Build.Framework.BuildEventContext.operator !=(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
static Microsoft.Build.Framework.BuildEventContext.operator ==(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForAggregatedGlob() -> Microsoft.Build.Framework.Profiler.EvaluationLocation
static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForCondition(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForGlob(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForProject(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
static Microsoft.Build.Framework.Profiler.EvaluationLocation.EmptyLocation.get -> Microsoft.Build.Framework.Profiler.EvaluationLocation
static Microsoft.Build.Framework.SdkReference.TryParse(string sdk, out Microsoft.Build.Framework.SdkReference sdkReference) -> bool
virtual Microsoft.Build.Framework.BuildEventArgs.Message.get -> string
virtual Microsoft.Build.Framework.BuildEventArgs.Message.set -> void
virtual Microsoft.Build.Framework.EngineServices.IsTaskInputLoggingEnabled.get -> bool
virtual Microsoft.Build.Framework.EngineServices.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) -> bool
virtual Microsoft.Build.Framework.EngineServices.Version.get -> int
virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.get -> bool
virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.get -> bool
virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.Logger.get -> Microsoft.Build.Framework.SdkLogger
virtual Microsoft.Build.Framework.SdkResolverContext.Logger.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.get -> System.Version
virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.get -> string
virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.get -> string
virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.set -> void
virtual Microsoft.Build.Framework.SdkResolverContext.State.get -> object
virtual Microsoft.Build.Framework.SdkResolverContext.State.set -> void
virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.get -> System.Collections.Generic.IList<string>
virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.set -> void
virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem>
virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.set -> void
virtual Microsoft.Build.Framework.SdkResult.Path.get -> string
virtual Microsoft.Build.Framework.SdkResult.Path.set -> void
virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.get -> System.Collections.Generic.IDictionary<string, string>
virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.set -> void
virtual Microsoft.Build.Framework.SdkResult.SdkReference.get -> Microsoft.Build.Framework.SdkReference
virtual Microsoft.Build.Framework.SdkResult.SdkReference.set -> void
virtual Microsoft.Build.Framework.SdkResult.Success.get -> bool
virtual Microsoft.Build.Framework.SdkResult.Success.set -> void
virtual Microsoft.Build.Framework.SdkResult.Version.get -> string
virtual Microsoft.Build.Framework.SdkResult.Version.set -> void
virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult